//
// This file was generated by Catalyst's C# compiler at 17/05/2025 20:08:06.
// It is recommended not to modify this file. Modify the source spec file instead.
//

namespace Lactose.Economy.ShopItems;

public class ShopItemsClientOptions
{
    public required string Url { get; set; }
}

public class ShopItemsClient(
    HttpClient httpClient,
    ShopItemsClientOptions options)
{
    public async Task<Lactose.Economy.ShopItems.GetShopItemsResponse> Get(Lactose.Economy.ShopItems.GetShopItemsRequest request)
    {
        HttpRequestMessage httpRequest = new()
        {
            Method = HttpMethod.Post,
            RequestUri = new Uri(options.Url + "/shopItems" + "/get"),
            Content = new ByteArrayContent(request.ToBytes()),
            Headers = { {"Content-Type", "application/json; charset=utf-8" }}
        };

        HttpResponseMessage httpResponse = await httpClient.SendAsync(httpRequest).ConfigureAwait(false);
        if (!httpResponse.IsSuccessStatusCode)
            throw new Exception(httpResponse.ReasonPhrase);

        byte[] responseBytes = await httpResponse.Content.ReadAsByteArrayAsync().ConfigureAwait(false);
        Lactose.Economy.ShopItems.GetShopItemsResponse? response = Lactose.Economy.ShopItems.GetShopItemsResponse.FromBytes(responseBytes);
        return response;
    }

    public async Task<Lactose.Economy.ShopItems.GetShopItemsResponse> GetUserShop(Lactose.Economy.ShopItems.GetShopItemsRequest request)
    {
        HttpRequestMessage httpRequest = new()
        {
            Method = HttpMethod.Post,
            RequestUri = new Uri(options.Url + "/shopItems" + "/getUserShop"),
            Content = new ByteArrayContent(request.ToBytes()),
            Headers = { {"Content-Type", "application/json; charset=utf-8" }}
        };

        HttpResponseMessage httpResponse = await httpClient.SendAsync(httpRequest).ConfigureAwait(false);
        if (!httpResponse.IsSuccessStatusCode)
            throw new Exception(httpResponse.ReasonPhrase);

        byte[] responseBytes = await httpResponse.Content.ReadAsByteArrayAsync().ConfigureAwait(false);
        Lactose.Economy.ShopItems.GetShopItemsResponse? response = Lactose.Economy.ShopItems.GetShopItemsResponse.FromBytes(responseBytes);
        return response;
    }

    public async Task<Lactose.Economy.ShopItems.UpdateUserShopItemsResponse> UpdateUserShop(Lactose.Economy.ShopItems.UpdateUserShopItemsRequest request)
    {
        HttpRequestMessage httpRequest = new()
        {
            Method = HttpMethod.Post,
            RequestUri = new Uri(options.Url + "/shopItems" + "/updateUserShop"),
            Content = new ByteArrayContent(request.ToBytes()),
            Headers = { {"Content-Type", "application/json; charset=utf-8" }}
        };

        HttpResponseMessage httpResponse = await httpClient.SendAsync(httpRequest).ConfigureAwait(false);
        if (!httpResponse.IsSuccessStatusCode)
            throw new Exception(httpResponse.ReasonPhrase);

        byte[] responseBytes = await httpResponse.Content.ReadAsByteArrayAsync().ConfigureAwait(false);
        Lactose.Economy.ShopItems.UpdateUserShopItemsResponse? response = Lactose.Economy.ShopItems.UpdateUserShopItemsResponse.FromBytes(responseBytes);
        return response;
    }

    public async Task<Lactose.Economy.ShopItems.DeleteUserShopResponse> DeleteUserShop(Lactose.Economy.ShopItems.DeleteUserShopRequest request)
    {
        HttpRequestMessage httpRequest = new()
        {
            Method = HttpMethod.Post,
            RequestUri = new Uri(options.Url + "/shopItems" + "/deleteUserShop"),
            Content = new ByteArrayContent(request.ToBytes()),
            Headers = { {"Content-Type", "application/json; charset=utf-8" }}
        };

        HttpResponseMessage httpResponse = await httpClient.SendAsync(httpRequest).ConfigureAwait(false);
        if (!httpResponse.IsSuccessStatusCode)
            throw new Exception(httpResponse.ReasonPhrase);

        byte[] responseBytes = await httpResponse.Content.ReadAsByteArrayAsync().ConfigureAwait(false);
        Lactose.Economy.ShopItems.DeleteUserShopResponse? response = Lactose.Economy.ShopItems.DeleteUserShopResponse.FromBytes(responseBytes);
        return response;
    }

    public async Task<Lactose.Economy.ShopItems.TradeShopItemResponse> Trade(Lactose.Economy.ShopItems.TradeShopItemRequest request)
    {
        HttpRequestMessage httpRequest = new()
        {
            Method = HttpMethod.Post,
            RequestUri = new Uri(options.Url + "/shopItems" + "/trade"),
            Content = new ByteArrayContent(request.ToBytes()),
            Headers = { {"Content-Type", "application/json; charset=utf-8" }}
        };

        HttpResponseMessage httpResponse = await httpClient.SendAsync(httpRequest).ConfigureAwait(false);
        if (!httpResponse.IsSuccessStatusCode)
            throw new Exception(httpResponse.ReasonPhrase);

        byte[] responseBytes = await httpResponse.Content.ReadAsByteArrayAsync().ConfigureAwait(false);
        Lactose.Economy.ShopItems.TradeShopItemResponse? response = Lactose.Economy.ShopItems.TradeShopItemResponse.FromBytes(responseBytes);
        return response;
    }
}
