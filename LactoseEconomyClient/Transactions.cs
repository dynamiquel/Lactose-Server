//
// This file was generated by Catalyst's C# compiler at 17/05/2025 20:08:06.
// It is recommended not to modify this file. Modify the source spec file instead.
//

using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace Lactose.Economy.Transactions;

public record UserTradeRequest
{
    public string? UserId { get; set; }

    public required List<Lactose.Economy.UserItems.UserItem> Items { get; set; }

    public byte[] ToBytes()
    {
        return System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(this);
    }

    public static UserTradeRequest? FromBytes(ReadOnlySpan<byte> bytes)
    {
        return System.Text.Json.JsonSerializer.Deserialize<UserTradeRequest>(bytes);
    }
}

public record QueryTransactionsRequest
{

    public byte[] ToBytes()
    {
        return System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(this);
    }

    public static QueryTransactionsRequest? FromBytes(ReadOnlySpan<byte> bytes)
    {
        return System.Text.Json.JsonSerializer.Deserialize<QueryTransactionsRequest>(bytes);
    }
}

public record QueryTransactionsResponse
{
    public required List<string> TransactionIds { get; set; }

    public byte[] ToBytes()
    {
        return System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(this);
    }

    public static QueryTransactionsResponse? FromBytes(ReadOnlySpan<byte> bytes)
    {
        return System.Text.Json.JsonSerializer.Deserialize<QueryTransactionsResponse>(bytes);
    }
}

public record GetTransactionRequest
{
    public required string TransactionId { get; set; }

    public byte[] ToBytes()
    {
        return System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(this);
    }

    public static GetTransactionRequest? FromBytes(ReadOnlySpan<byte> bytes)
    {
        return System.Text.Json.JsonSerializer.Deserialize<GetTransactionRequest>(bytes);
    }
}

public record GetTransactionResponse
{
    public string? SourceUserId { get; set; }

    public string? DestinationUserId { get; set; }

    public required string ItemId { get; set; }

    public required int Quantity { get; set; }

    public required DateTime Time { get; set; }

    public byte[] ToBytes()
    {
        return System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(this);
    }

    public static GetTransactionResponse? FromBytes(ReadOnlySpan<byte> bytes)
    {
        return System.Text.Json.JsonSerializer.Deserialize<GetTransactionResponse>(bytes);
    }
}

public record TradeRequest
{
    public required Lactose.Economy.Transactions.UserTradeRequest UserA { get; set; }

    public required Lactose.Economy.Transactions.UserTradeRequest UserB { get; set; }

    public byte[] ToBytes()
    {
        return System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(this);
    }

    public static TradeRequest? FromBytes(ReadOnlySpan<byte> bytes)
    {
        return System.Text.Json.JsonSerializer.Deserialize<TradeRequest>(bytes);
    }
}

public record TradeResponse
{
    [JsonPropertyName("reason")]
    public required string Reason { get; set; }

    public byte[] ToBytes()
    {
        return System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(this);
    }

    public static TradeResponse? FromBytes(ReadOnlySpan<byte> bytes)
    {
        return System.Text.Json.JsonSerializer.Deserialize<TradeResponse>(bytes);
    }
}

public record TradeEvent
{
    public string? OutgoingUserId { get; set; }

    public string? IncomingUserId { get; set; }

    public required List<string> TransactionIds { get; set; }

    public byte[] ToBytes()
    {
        return System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(this);
    }

    public static TradeEvent? FromBytes(ReadOnlySpan<byte> bytes)
    {
        return System.Text.Json.JsonSerializer.Deserialize<TradeEvent>(bytes);
    }
}
