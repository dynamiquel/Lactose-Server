//
// This file was generated by Catalyst's C# compiler at 20/06/2025 11:47:43.
// It is recommended not to modify this file. Modify the source spec file instead.
//

namespace Lactose.Economy.UserItems;

public class UserItemsClientOptions
{
    public required string Url { get; set; }
}

public class UserItemsClient(
    HttpClient httpClient,
    UserItemsClientOptions options)
{
    public async Task<Lactose.Economy.UserItems.QueryUserItemsResponse> Query(Lactose.Economy.UserItems.QueryUserItemsRequest request)
    {
        HttpRequestMessage httpRequest = new()
        {
            Method = HttpMethod.Post,
            RequestUri = new Uri(options.Url + "/userItems" + "/query"),
            Content = new ByteArrayContent(request.ToBytes()),
            Headers = { {"Content-Type", "application/json; charset=utf-8" }}
        };

        HttpResponseMessage httpResponse = await httpClient.SendAsync(httpRequest).ConfigureAwait(false);
        httpResponse.EnsureSuccessStatusCode();

        byte[] responseBytes = await httpResponse.Content.ReadAsByteArrayAsync().ConfigureAwait(false);
        Lactose.Economy.UserItems.QueryUserItemsResponse? response = Lactose.Economy.UserItems.QueryUserItemsResponse.FromBytes(responseBytes);

        if (response is null)
            throw new NullReferenceException("Response of 'UserItemsClient/Query' is null");

        return response;
    }

    public async Task<Lactose.Economy.UserItems.GetUserItemsResponse> Get(Lactose.Economy.UserItems.GetUserItemsRequest request)
    {
        HttpRequestMessage httpRequest = new()
        {
            Method = HttpMethod.Post,
            RequestUri = new Uri(options.Url + "/userItems" + "/get"),
            Content = new ByteArrayContent(request.ToBytes()),
            Headers = { {"Content-Type", "application/json; charset=utf-8" }}
        };

        HttpResponseMessage httpResponse = await httpClient.SendAsync(httpRequest).ConfigureAwait(false);
        httpResponse.EnsureSuccessStatusCode();

        byte[] responseBytes = await httpResponse.Content.ReadAsByteArrayAsync().ConfigureAwait(false);
        Lactose.Economy.UserItems.GetUserItemsResponse? response = Lactose.Economy.UserItems.GetUserItemsResponse.FromBytes(responseBytes);

        if (response is null)
            throw new NullReferenceException("Response of 'UserItemsClient/Get' is null");

        return response;
    }

    public async Task<Lactose.Economy.UserItems.CreateVendorResponse> CreateVendor(Lactose.Economy.UserItems.CreateVendorRequest request)
    {
        HttpRequestMessage httpRequest = new()
        {
            Method = HttpMethod.Post,
            RequestUri = new Uri(options.Url + "/userItems" + "/createVendor"),
            Content = new ByteArrayContent(request.ToBytes()),
            Headers = { {"Content-Type", "application/json; charset=utf-8" }}
        };

        HttpResponseMessage httpResponse = await httpClient.SendAsync(httpRequest).ConfigureAwait(false);
        httpResponse.EnsureSuccessStatusCode();

        byte[] responseBytes = await httpResponse.Content.ReadAsByteArrayAsync().ConfigureAwait(false);
        Lactose.Economy.UserItems.CreateVendorResponse? response = Lactose.Economy.UserItems.CreateVendorResponse.FromBytes(responseBytes);

        if (response is null)
            throw new NullReferenceException("Response of 'UserItemsClient/CreateVendor' is null");

        return response;
    }
}
